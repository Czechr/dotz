4c4
< static const unsigned int borderpx  = 3;        /* border pixel of windows */
---
> static const unsigned int borderpx  = 1;        /* border pixel of windows */
8c8
< static const char *fonts[]          = { "LiberationMono-Bold:size=9" };
---
> static const char *fonts[]          = { "monospace:size=10" };
11c11
< static const char col_gray2[]       = "#666363";
---
> static const char col_gray2[]       = "#444444";
14,16c14
< static const char col_cyan[]        = "#000000";
< static const unsigned int baralpha = 0xc0;
< static const unsigned int borderalpha = OPAQUE;
---
> static const char col_cyan[]        = "#005577";
22,51d19
< static const unsigned int alphas[][3]      = {
< 	/*               fg      bg        border     */
< 	[SchemeNorm] = { OPAQUE, baralpha, borderalpha },
< 	[SchemeSel]  = { OPAQUE, baralpha, borderalpha },
< };
< 
< static const char *tags[] = {
<     /* "●","●","●","●","●","●" */
<     "1", "2", "3", "4", "5", "6"
< };
< 
< /** Function to shift the current view to the left/right
<  *
<  * @param: "arg->i" stores the number of tags to shift right (positive value)
<  *          or left (negative value)
<  */
< void
< shiftview(const Arg *arg) {
< 	Arg shifted;
< 
< 	if(arg->i > 0) // left circular shift
< 		shifted.ui = (selmon->tagset[selmon->seltags] << arg->i)
< 		   | (selmon->tagset[selmon->seltags] >> (LENGTH(tags) - arg->i));
< 
< 	else // right circular shift
< 		shifted.ui = selmon->tagset[selmon->seltags] >> (- arg->i)
< 		   | selmon->tagset[selmon->seltags] << (LENGTH(tags) + arg->i);
< 
< 	view(&shifted);
< }
53a22
> static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
62c31
< 	{ "Firefox",  NULL,       NULL,       1 << 5,       0,           -1 },
---
> 	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
70,71d38
< #include "layouts.c"
< #include "fibonacci.c"
74,79c41,43
< 	{ "[]=",	tile },    /* first entry is default */
< 	{ "[M]",	monocle },
<  	{ "[@]",	spiral },
< 	{ "|M|",	centeredmaster },
< 	{ "><>",	NULL },    /* no layout function means floating behavior */
< 	{ ">M>",	centeredfloatingmaster },
---
> 	{ "[]=",      tile },    /* first entry is default */
> 	{ "><>",      NULL },    /* no layout function means floating behavior */
> 	{ "[M]",      monocle },
83c47
< #define MODKEY Mod4Mask
---
> #define MODKEY Mod1Mask
95a60
> static const char *termcmd[]  = { "st", NULL };
97d61
< #include "movestack.c"
100,140c64,96
< 	{ MODKEY,			XK_q,		killclient,	{0} },
< 	{ MODKEY,                       XK_j,		focusstack,	{.i = +1 } },
< 	{ MODKEY,                       XK_k,		focusstack,	{.i = -1 } },
< 	{ MODKEY|ShiftMask,             XK_j,		movestack,	{.i = +1 } },
< 	{ MODKEY|ShiftMask,             XK_k,		movestack,	{.i = -1 } },
< 	{ MODKEY,			XK_space,	zoom,		{0} },
< 	{ MODKEY,                       XK_h,		setmfact,	{.f = -0.05} },
< 	{ MODKEY,                       XK_l,		setmfact,	{.f = +0.05} },
< 	{ MODKEY|ShiftMask,		XK_i,		incnmaster,	{.i = +1 } },
< 	{ MODKEY|ShiftMask,		XK_o,		incnmaster,	{.i = -1 } },
< 	{ MODKEY,			XK_b,		togglebar,	{0} },
< 	{ MODKEY,			XK_t,		setlayout,	{.v = &layouts[0]} },
< 	{ MODKEY,			XK_f,		setlayout,	{.v = &layouts[1]} },
< 	{ MODKEY,			XK_y,		setlayout,	{.v = &layouts[2]} },
< 	{ MODKEY,			XK_u,		setlayout,	{.v = &layouts[3]} },
< 	{ MODKEY,			XK_i,		setlayout,	{.v = &layouts[4]} },
< 	{ MODKEY,			XK_o,		setlayout,	{.v = &layouts[5]} },
< 	{ MODKEY,			XK_Tab,		view,		{0} },
< 	{ MODKEY,			XK_backslash,	view,		{0} },
< 	{ MODKEY|ShiftMask,		XK_space,	togglefloating,	{0} },
< 	/* { MODKEY,                       XK_space,  setlayout,      {0} }, */
< 	/* { MODKEY,                       XK_comma,  focusmon,       {.i = -1 } }, */
< 	/* { MODKEY,                       XK_period, focusmon,       {.i = +1 } }, */
< 	/* { MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } }, */
< 	/* { MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } }, */
< 	TAGKEYS(			XK_1,			0)
< 	TAGKEYS(			XK_2,			1)
< 	TAGKEYS(			XK_3,			2)
< 	TAGKEYS(			XK_4,			3)
< 	TAGKEYS(			XK_5,			4)
< 	TAGKEYS(			XK_6,			5)
< 	TAGKEYS(			XK_7,			6)
< 	TAGKEYS(			XK_8,			7)
< 	TAGKEYS(			XK_9,			8)
< 	{ MODKEY,                       XK_0,		view,		{.ui = ~0 } },
< 	{ MODKEY|ShiftMask,		XK_0,		tag,		{.ui = ~0 } },
< 	{ MODKEY,			XK_F2,		quit,		{0} },
< 	{ MODKEY,			XK_g,		shiftview,	{ .i = -1 } },
< 	{ MODKEY,			XK_semicolon,	shiftview,	{ .i = 1 } },
< 	{ MODKEY,			XK_Page_Up,	shiftview,	{ .i = -1 } },
< 	{ MODKEY,			XK_Page_Down,	shiftview,	{ .i = 1 } },
---
> 	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
> 	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
> 	{ MODKEY,                       XK_b,      togglebar,      {0} },
> 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
> 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
> 	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
> 	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
> 	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
> 	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
> 	{ MODKEY,                       XK_Return, zoom,           {0} },
> 	{ MODKEY,                       XK_Tab,    view,           {0} },
> 	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
> 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
> 	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
> 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
> 	{ MODKEY,                       XK_space,  setlayout,      {0} },
> 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
> 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
> 	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
> 	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
> 	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
> 	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
> 	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
> 	TAGKEYS(                        XK_1,                      0)
> 	TAGKEYS(                        XK_2,                      1)
> 	TAGKEYS(                        XK_3,                      2)
> 	TAGKEYS(                        XK_4,                      3)
> 	TAGKEYS(                        XK_5,                      4)
> 	TAGKEYS(                        XK_6,                      5)
> 	TAGKEYS(                        XK_7,                      6)
> 	TAGKEYS(                        XK_8,                      7)
> 	TAGKEYS(                        XK_9,                      8)
> 	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
150c106
< 	/* { ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } }, */
---
> 	{ ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } },
